{"version":3,"sources":["components/Title.jsx","utils/api.js","components/Navbar.jsx","utils/updateVoteReq.js","components/Vote.jsx","components/ArticleCard.jsx","components/Loading.jsx","components/ArticleList.jsx","utils/postCommentReq.js","components/NoticeMsgDisplay.jsx","components/CommentForm.jsx","components/ErrDisplay.jsx","utils/deleteCommentReq.js","components/ArticleComments.jsx","components/Article.jsx","components/UserPick.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","username","to","makeApiRequests","url","axios","get","then","data","Navbar","state","allTopics","topics","map","topic","setState","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","index","slug","key","toUpperCase","Component","updateArticleVoteReq","inc_votes","path","patch","Vote","currentVote","voteValue","handleVote","num","currentState","props","onClick","event","role","ArticleCard","allArticles","article","article_id","title","author","comment_count","votes","Loading","msg","ArticleList","loading","articlesData","articles","postComment","body","post","NoticeMsgDisplay","CommentForm","bodyInput","postedComment","posting","handleChange","target","value","handleSubmit","preventDefault","comment","onSubmit","placeholder","onChange","rows","ErrHandling","err_msg","class","aria-labelrole","deleteCommentReq","delete","ArticleComments","comments","sortBy","loggedInUser","err","deletingComment","commentDeleted","handleSortByByChange","handleDeleteComment","comment_id","catch","currentUser","prevProps","prevState","ErrDisplay","console","log","created_at","Article","commentsDisplayed","handleShowComments","UserPick","usersList","handleClick","selectedUser","pickedUser","localStorage","setItem","user","App","setUsername","localUser","getItem","primary","exact","default","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56cfbe88.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst Title = ({ username }) => {\n  return (\n    <div>\n      <Link to={\"/\"}>\n        <h1>NC News</h1>\n      </Link>\n      <h5>\n        Logged In As: <Link to={\"/users\"}>{username}</Link>\n      </h5>\n    </div>\n  );\n};\n\nexport default Title;\n","import axios from \"axios\";\n\nexport const makeApiRequests = url => {\n  return axios\n    .get(`https://nc-news2020.herokuapp.com/api/${url}`)\n    .then(({ data }) => {\n      return data;\n    });\n};\n\nexport default makeApiRequests;\n","import React, { Component } from \"react\";\nimport makeApiRequests from \"../utils/api\";\nimport { Link } from \"@reach/router\";\n\nclass Navbar extends Component {\n  state = {\n    allTopics: []\n  };\n\n  componentDidMount() {\n    makeApiRequests(\"topics/\").then(({ topics }) => {\n      const allTopics = topics.map(topic => topic);\n      this.setState({ allTopics });\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar navbar-dark bg-dark\">\n        <Link className=\"navbar-brand\" to={\"/\"}>\n          NC News\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <Link className=\"nav-item nav-link active\" to={\"/users\"}>\n              LOGIN\n            </Link>\n            {this.state.allTopics.map((topic, index) => {\n              return (\n                <Link\n                  className=\"nav-item nav-link active\"\n                  to={`/topics/${topic.slug}`}\n                  key={index}\n                >\n                  {topic.slug.toUpperCase()}\n                </Link>\n              );\n            })}\n            )\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nexport const updateArticleVoteReq = (id, inc_votes, path) => {\n  return axios\n    .patch(`https://nc-news2020.herokuapp.com/api/${path}/${id}`, {\n      inc_votes\n    })\n    .then(({ data }) => {\n      return data;\n    });\n};\n\nexport default updateArticleVoteReq;\n","import React, { Component } from \"react\";\nimport updateArticleVoteReq from \"../utils/updateVoteReq\";\n\nclass Vote extends Component {\n  state = { currentVote: 0, voteValue: 0 };\n\n  handleVote = num => {\n    this.setState(currentState => {\n      return {\n        currentVote: currentState.currentVote + num,\n        voteValue: currentState.voteValue + num\n      };\n    });\n    const { path, id } = this.props;\n    updateArticleVoteReq(id, num, path);\n  };\n\n  componentDidMount() {\n    const { currentVote } = this.props;\n    this.setState({ currentVote });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Votes: {this.state.currentVote}</h4>\n        {this.state.voteValue <= 0 && (\n          <button\n            onClick={event => this.handleVote(1)}\n            type=\"button\"\n            className=\"btn btn-outline-info\"\n          >\n            Up Vote Vote <span role=\"img\">👍</span>\n          </button>\n        )}\n        {this.state.voteValue >= 0 && (\n          <button\n            onClick={event => this.handleVote(-1)}\n            type=\"button\"\n            className=\"btn btn-outline-danger\"\n          >\n            Down Vote <span role=\"img\">👎</span>\n          </button>\n        )}\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default Vote;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport Vote from \"./Vote\";\n\nconst ArticleCard = ({ allArticles }) => {\n  if (allArticles) {\n    return allArticles.map(article => {\n      return (\n        <main key={article.article_id}>\n          <hr />\n          <h3>\n            <Link to={`/articles/${article.article_id}`}>{article.title}</Link>\n          </h3>\n          <h6>-By {article.author}</h6>\n          <h5>\n            <Link to={`/topics/${article.topic}`}>{article.topic}</Link>\n          </h5>\n          <h5>Comments {article.comment_count}</h5>\n          <Vote\n            id={article.article_id}\n            currentVote={article.votes}\n            path={\"articles\"}\n          />\n          <hr />\n        </main>\n      );\n    });\n  }\n};\n\nexport default ArticleCard;\n","import React from \"react\";\n\nconst Loading = ({ msg }) => {\n  return (\n    <div className=\"alert alert-info\">\n      <strong>Loading!</strong> {msg && <h4>{msg}</h4>}\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport ArticleCard from \"./ArticleCard\";\nimport makeApiRequests from \"../utils/api\";\nimport Loading from \"./Loading\";\n\nclass ArticleList extends Component {\n  state = {\n    allArticles: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    if (this.props.topic) {\n      makeApiRequests(`articles/?topic=${this.props.topic}`)\n        .then(({ articles }) => {\n          const articlesData = articles.map(article => article);\n          this.setState({ allArticles: articlesData });\n        })\n        .then(() => {\n          this.setState({ loading: false });\n        });\n    } else {\n      makeApiRequests(\"articles/\")\n        .then(({ articles }) => {\n          const articlesData = articles.map(article => article);\n          this.setState({ allArticles: articlesData });\n        })\n        .then(() => {\n          this.setState({ loading: false });\n        });\n    }\n  }\n\n  render() {\n    return (\n      <article>\n        {this.state.loading && (\n          <Loading msg={\"One tick just getting you the articles\"} />\n        )}\n        <ArticleCard allArticles={this.state.allArticles} />\n      </article>\n    );\n  }\n}\n\nexport default ArticleList;\n","import axios from \"axios\";\n\nexport const postComment = (article_id, body) => {\n  return axios\n    .post(\n      `https://nc-news2020.herokuapp.com/api/articles/${article_id}/comments`,\n      {\n        username: \"cooljmessy\",\n        body\n      }\n    )\n    .then(({ data: comment }) => {\n      return comment;\n    });\n};\n\nexport default postComment;\n","import React from \"react\";\n\nconst NoticeMsgDisplay = ({ msg }) => {\n  return (\n    <div className=\"alert alert-success\" role=\"alert\">\n      <h3>{msg}</h3>\n    </div>\n  );\n};\n\nexport default NoticeMsgDisplay;\n","import React, { Component } from \"react\";\nimport postComment from \"../utils/postCommentReq\";\nimport NoticeMsgDisplay from \"./NoticeMsgDisplay\";\n\nclass CommentForm extends Component {\n  state = {\n    bodyInput: \"\",\n    postedComment: null,\n    posting: null\n  };\n\n  handleChange = event => {\n    this.setState({ bodyInput: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ posting: true, bodyInput: \"\" });\n    const { bodyInput } = this.state;\n    const { article_id } = this.props;\n    postComment(article_id, bodyInput).then(postedComment => {\n      this.setState({ postedComment, posting: null });\n    });\n  };\n\n  render() {\n    return (\n      <ul>\n        {this.state.postedComment && (\n          <NoticeMsgDisplay\n            msg={`\"${this.state.postedComment.comment.body}\" has been posted!`}\n          />\n        )}\n\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <textarea\n              placeholder=\"Write a comment 🔥\"\n              type=\"text\"\n              onChange={this.handleChange}\n              value={this.state.bodyInput}\n              id=\"comment\"\n              className=\"form-control\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n          {!this.state.posting && (\n            <button className=\"btn btn-outline-secondary\">\n              Add Comment ▶︎\n            </button>\n          )}\n        </form>\n      </ul>\n    );\n  }\n}\n\nexport default CommentForm;\n","import React from \"react\";\n\nconst ErrHandling = ({ err_msg }) => {\n  return (\n    <div class=\"alert alert-danger\" role=\"alert\">\n      {err_msg ? (\n        <h3>{err_msg}</h3>\n      ) : (\n        <h3>\n          Page not found... <span aria-labelrole=\"img\">💩</span>\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default ErrHandling;\n","import axios from \"axios\";\n\nexport const deleteCommentReq = url => {\n  return axios\n    .delete(`https://nc-news2020.herokuapp.com/api/${url}`)\n    .then(({ data }) => {\n      // returns an empty object on success and nothing when failed\n      return data;\n    });\n};\n\nexport default deleteCommentReq;\n","import React, { Component } from \"react\";\nimport makeApiRequests from \"../utils/api\";\nimport deleteCommentReq from \"../utils/deleteCommentReq\";\nimport Vote from \"./Vote\";\nimport Loading from \"./Loading\";\nimport ErrDisplay from \"./ErrDisplay\";\nimport NoticeMsgDisplay from \"./NoticeMsgDisplay\";\n\nclass ArticleComments extends Component {\n  state = {\n    comments: [],\n    sortBy: \"created_at\",\n    loggedInUser: \"\",\n    loading: true,\n    err: false,\n    err_msg: \"\",\n    deletingComment: false,\n    commentDeleted: false\n  };\n\n  componentDidMount() {\n    const { article_id } = this.props;\n    makeApiRequests(`articles/${article_id}/comments`).then(comments => {\n      this.setState({\n        comments,\n        loading: false,\n        loggedInUser: this.props.currentUser\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { article_id } = this.props;\n    if (prevProps.article_id !== article_id) {\n      makeApiRequests(\n        `articles/${article_id}/comments?sort_by=${this.state.sortBy}`\n      ).then(comments => {\n        this.setState({ comments });\n      });\n    }\n  }\n\n  handleSortByByChange = ({ target: { value } }) => {\n    this.setState({ sortBy: value });\n  };\n\n  handleDeleteComment = comment_id => {\n    this.setState({ commentDeleted: false, deletingComment: true });\n    deleteCommentReq(`comments/${comment_id}`)\n      .then(() => {\n        this.setState({ commentDeleted: true, deletingComment: false });\n      })\n      .catch(() => {\n        this.setState({\n          loading: false,\n          err: true,\n          err_msg: \"The comment you trying to delete is no longer exist 🙅‍♀️\"\n        });\n      });\n  };\n\n  render() {\n    const {\n      comments: { comments }\n    } = this.state;\n\n    if (comments) {\n      if (this.state.err) return <ErrDisplay err_msg={this.state.err_msg} />;\n      return (\n        <>\n          {this.state.commentDeleted && (\n            <NoticeMsgDisplay msg={\"The comment has been deleted!\"} />\n          )}\n          <form>\n            <label>\n              Sort comments by:\n              <select\n                value={this.state.value}\n                onChange={this.handleSortByByChange}\n              >\n                <option value=\"created_at\">Date Created</option>\n                <option value=\"username\">Author</option>\n                <option value=\"votes\"> Comment Votes</option>\n              </select>\n            </label>\n          </form>\n          {comments.map(comment => {\n            return (\n              <>\n                <hr />\n                <br />\n                <p>Body: {comment.body}</p>\n                <h1>{console.log(this.state.loggedInUser)}</h1>\n                <p>Username: {comment.username}</p>\n                <p>Created at: {comment.created_at}</p>\n                <br />\n                <Vote\n                  id={comment.comment_id}\n                  currentVote={comment.votes}\n                  path={\"comments\"}\n                />\n                <br />\n                {!this.state.deletingComment &&\n                  this.state.loggedInUser === comment.username && (\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-warning\"\n                      onClick={event =>\n                        this.handleDeleteComment(comment.comment_id)\n                      }\n                    >\n                      Delete Comment <span role=\"img\">💩</span>\n                    </button>\n                  )}\n              </>\n            );\n          })}\n        </>\n      );\n    } else return <Loading msg={\"Cool comments are on their way!\"} />;\n  }\n}\n\nexport default ArticleComments;\n","import React, { Component } from \"react\";\nimport { Link } from \"@reach/router\";\nimport makeApiRequests from \"../utils/api\";\nimport CommentForm from \"./CommentForm\";\nimport Vote from \"./Vote\";\nimport Loading from \"./Loading\";\nimport ErrDisplay from \"./ErrDisplay\";\nimport ArticleComments from \"./ArticleComments\";\n\nclass Article extends Component {\n  state = {\n    article: \"\",\n    loading: true,\n    err: false,\n    err_msg: \"\",\n    commentsDisplayed: false\n  };\n\n  componentDidMount() {\n    const { article_id } = this.props;\n    makeApiRequests(`articles/${article_id}`)\n      .then(({ article }) => {\n        this.setState({ article, loading: false });\n      })\n      .catch(() => {\n        this.setState({\n          err: true,\n          err_msg: \"oops this article dose not exist 💩 404\"\n        });\n      });\n  }\n\n  handleShowComments = () => {\n    const { commentsDisplayed } = this.state;\n    this.setState({ commentsDisplayed: !commentsDisplayed });\n  };\n\n  render() {\n    const { article } = this.state;\n    if (article) {\n      return (\n        <div>\n          <h3>{article.title}</h3>\n          <p>{article.body}</p>\n          <Link to={`/topics/${article.topic}`}>{article.topic}</Link>\n          <p>Author {article.author}</p>\n          <p>Created at {article.created_at}</p>\n          <Vote\n            id={article.article_id}\n            currentVote={article.votes}\n            path={\"articles\"}\n          />\n          <CommentForm article_id={article.article_id} />\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={this.handleShowComments}\n          >\n            {!this.state.commentsDisplayed\n              ? `Show ${article.comment_count} comments 👀`\n              : `Hide Comments 🙈`}\n          </button>\n          <br />\n          {this.state.commentsDisplayed && (\n            <ArticleComments article_id={article.article_id} />\n          )}\n        </div>\n      );\n    } else if (this.state.err)\n      return <ErrDisplay err_msg={this.state.err_msg} />;\n    else return <Loading err_msg={\"Just getting you that amazing article\"} />;\n  }\n}\n\nexport default Article;\n","import React, { Component } from \"react\";\n\nclass UserPick extends Component {\n  state = {\n    usersList: [\n      \"cooljmessy\",\n      \"weegembump\",\n      \"happyamy2016\",\n      \"jessjelly\",\n      \"grumpy19\",\n      \"tickle122\",\n      \"happyamy2016\"\n    ]\n  };\n\n  handleClick = selectedUser => {\n    this.props.pickedUser(selectedUser);\n    localStorage.setItem(\"user\", selectedUser);\n  };\n\n  render() {\n    return this.state.usersList.map((user, index) => {\n      return (\n        <div className=\"card\" key={index}>\n          <div className=\"card-header\"></div>\n          <div className=\"card-body\">\n            <h6 className=\"card-title\">{user}</h6>\n            <a\n              onClick={event => this.handleClick(user)}\n              className=\"btn btn-outline-info\"\n            >\n              {`Login as ${user}`}\n            </a>\n          </div>\n        </div>\n      );\n    });\n  }\n}\n\nexport default UserPick;\n","import React, { Component } from \"react\";\nimport { Router } from \"@reach/router\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport ArticleList from \"./components/ArticleList\";\nimport Article from \"./components/Article\";\nimport ErrDisplay from \"./components/ErrDisplay\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UserPick from \"./components/UserPick\";\n\nclass App extends Component {\n  state = {\n    username: \"jessjelly\"\n  };\n\n  componentDidMount() {\n    const localUser = localStorage.getItem(\"user\");\n    if (localUser) this.setState({ username: localUser });\n  }\n\n  setUsername = selectedUser => {\n    this.setState({ username: selectedUser });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Title username={this.state.username} />\n        <Navbar />\n        <Router primary={false}>\n          <ArticleList path=\"/\" />\n          <UserPick path=\"/users/\" pickedUser={this.setUsername} />\n          <ArticleList path=\"/articles/\" />\n          <ArticleList exact path=\"/topics/:topic/\" />\n          <Article path=\"/articles/:article_id/\" />\n          <ErrDisplay default />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}